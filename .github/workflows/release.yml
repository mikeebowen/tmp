name: Release

on:
    workflow_run:
      workflows: ["Package"]
      types:
        - completed
permissions: 
    issues: write

jobs: 
    releaseInfo: 
      name: Check for Release
      runs-on: ubuntu-latest
      if: github.event.workflow_run.conclusion == 'success'
      steps:
      - name: Download Release Info
        uses: dawidd6/action-download-artifact@v2
        with:
         run_id: ${{ github.event.workflow_run.id }}
         name: release-info.txt
         path: ${{ github.workspace }}/releaseInfo
      - name: Check is workflow is release
        shell: pwsh
        run: >
            $isRelease = Get-Content release-info.txt
            $uri = [uri]::EscapeUriString("https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel")
            echo "isRelease = "
            echo $isRelease
            echo "uri = " 
            echo $uri
            $token = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes(":${{ github.TOKEN }}"))
            $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
            $headers.Add('Authorization', 'Bearer $token')
            $headers.Add('Accept', 'application/vnd.github+json')
            $headers.Add('X-GitHub-Api-Version', '2022-11-28')
            
            if ($isRelease -ne "true") {
                $res = Invoke-WebRequest -Headers $headers -Uri $uri
            }
    deploy:
      name: "Deploy Packages to Nuget"
#       if: github.event.workflow_run.conclusion == 'success' && github.event_name == 'release'      
      needs: [releaseInfo]
      runs-on: ubuntu-latest
      steps:
        # - name: Download and Extract Artifacts from build
        #   uses: dawidd6/action-download-artifact@v2
        #   with:
        #     run_id: ${{ github.event.workflow_run.id }}
        #     name: Signed
        #     path: artifacts

        # - name: Setup .NET Core
        #   uses: actions/setup-dotnet@v3

        - name: Approve
          uses: trstringer/manual-approval@v1
          with:
              secret: ${{ github.TOKEN }}
              approvers: mikeebowen
              minimum-approvals: 1
              issue-title: "Approval for publishing to Nuget.org"
              issue-body: "Please approve or deny the deployment to Nuget.org"
              exclude-workflow-initiator-as-approver: false
              additional-approved-words: ''
              additional-denied-words: ''

        - name: Publish NuGet package
          shell: pwsh
          run: >
            echo "this should require approval"
        #   run: |
        #     foreach($file in (Get-ChildItem "${{ github.workspace }}/artifacts" -Recurse -Include *.nupkg)) {
        #         dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        #     }
